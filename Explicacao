Workshop:

- BVM,antes de entrar no codigo vamos entender sobre as tecnologias usadas:

L2 - Rollups e Zkproof

- OPstack

- Bridge

Vamos configurar dois ambientes que ja deixei o repositorio pronto para vcs:

- Repo:

Vamos ao hardahat e vou usar JavaScript pq e uma linguagem mais universal:
precisa ter instalado o NODE.JS

https://hardhat.org/

npm install --save-dev hardhat

npx hardhat init

vamos configurar nosso hardhat.config:

__________________________________________________________

require("@nomicfoundation/hardhat-toolbox");

PRIVATE_KEY = "SUA_PRIVATE_KEY";

/** @type import('hardhat/config').HardhatUserConfig */
module.exports = {
  solidity: "0.8.24",
  settings: {
    optimizer: {
      enabled: true,
      runs: 200,
    },
  },

  networks: {
    hardhat: {},
    bvm: {
      url: "https://l2-node.regtest.trustless.computer/",
      accounts:[`0x${PRIVATE_KEY}`],
      chainId: 42070
    },
    sepolia: {
      url: "https://sepolia.infura.io/v3/79b4c096477948aeac7ebfda5d04eded",
      accounts:[`0x${PRIVATE_KEY}`],
      chainId: 11155111 
    },
  },

};


________________________________________________________________________


Comando para deployar na sepolia:

npx hardhat ignition deploy ./ignition/modules/Lock.js --network sepolia

para bvm e so subistituir para bvm


Vamos para o Foundry que na minha opiniao e mais potente e melhor:

Depois o Foundry:

https://book.getfoundry.sh/getting-started/installation

depois de instalar o cargo (rust)

devemso installar o foundry ou se vc ja tiver por ai, atualize ele:

foundryup

Configuracao dele em:

foundry.toml

______________________________________________________________________

[profile.default]
solc_version = "0.8.24"
src = "src"
out = "out"
libs = ["lib"]
remappings = [
    "@openzeppelin/contracts=lib/openzeppelin-contracts/contracts",
]
optimizer = true
optimezer_runs = 50
evm_version = "cancun"


[rpc_endpoints]
sepolia = "${SEPOLIA_RPC_URL}"
nostest = "${NOSTEST_RPC_URL}"

[etherscan]
sepolia = { key = "${ETHERSCAN_API_KEY}" }
# See more config options https://github.com/foundry-rs/foundry/blob/master/crates/config/README.md#all-options

___________________________________________________________________________

Vamos criar um contrato chamado helper para usarmos nossa private key e variaveis de ambientes e deployar so quando a chain for do id correto.

_____________________________________________________________

comando de deploy:
forge script script/Counter.s.sol:Deploy --rpc-url sepolia --broadcast



